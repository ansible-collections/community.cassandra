# test code for the cassandra_backup module
# (c) 2019,  Rhys Campbell <rhys.james.campbell@googlemail.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

# ===========================================================

- name: Run module tests for cassandra_status
  block:
    # ccm created nodes seem to number the jmx ports 7100, 7200, 7300 usw
    - name: Execute module against the first ccm node
      community.cassandra.cassandra_status:
        host: 127.0.0.1
        port: 7100
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
      register: rhys

    - name: Assert module output reports all nodes up
      assert:
        that:
          - "rhys.cluster_status['london']['down'] | length == 0"
          - "rhys.cluster_status['london']['up'] | length == 2"
          - "rhys.cluster_status['paris']['down'] | length == 0"
          - "rhys.cluster_status['paris']['up'] | length == 1"
          - "rhys.cluster_status['new_york']['down'] | length == 0"
          - "rhys.cluster_status['new_york']['up'] | length == 1"
          - "rhys.cluster_status['tokyo']['down'] | length == 0"
          - "rhys.cluster_status['tokyo']['up'] | length == 1"
          - "rhys.cluster_status['zurich']['down'] | length == 0"
          - "rhys.cluster_status['zurich']['up'] | length == 1"
          - "rhys.cluster_status['amsterdam']['down'] | length == 0"
          - "rhys.cluster_status['amsterdam']['up'] | length == 1"
          - "rhys.cluster_status['marlow']['down'] | length == 0"
          - "rhys.cluster_status['marlow']['up'] | length == 1"

    - name: Stop marlow1
      shell: "sudo -E -u cassandra bash -c \"{{ ccm_cmd | mandatory }} marlow1 stop\""
      become_user: cassandra
      args:
        warn: false
        chdir: /home/cassandra
      environment:
        CCM_CONFIG_DIR: "/home/cassandra/config"
        CASSANDRA_HOME: "/home/cassandra"

    - pause:
        seconds: 5

    # jmx port only open on ccm node1
    - name: Execute module against the second ccm node
      community.cassandra.cassandra_status:
        host: 127.0.0.1
        port: 7100
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
      ignore_errors: yes
      register: rhys

    - name: Assert module output reports node2 down
      assert:
        that:
          - "rhys.cluster_status['marlow']['down'] | length == 1"
          - "rhys.cluster_status['marlow']['up'] | length == 0"
          - "'127.0.0.8' in rhys.cluster_status['marlow']['down']"
          - "'127.0.0.8' not in rhys.cluster_status['marlow']['up']"

    - name: Start node2
      shell: "sudo -E -u cassandra bash -c \"{{ ccm_cmd | mandatory }} marlow1 start &\""
      become_user: cassandra
      args:
        warn: false
        chdir: /home/cassandra
      environment:
        CCM_CONFIG_DIR: "/home/cassandra/config"
        CASSANDRA_HOME: "/home/cassandra"

    # We expect marlow1 to rejoin the cluster
    - name: Execute module after marlow1 started again
      community.cassandra.cassandra_status:
        poll: 99
        interval: 1
        host: 127.0.0.1
        port: 7100
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes
      register: rhys

    - name: Assert module all nodes are up
      assert:
        that:
          - "rhys.cluster_status['marlow']['down'] | length == 0"
          - "rhys.cluster_status['marlow']['up'] | length == 1"
          - "rhys.iterations > 1"
          - "rhys.cluster_status_list[0]['marlow']['down'][0] == '127.0.0.8'"
          - "'127.0.0.8' in rhys.cluster_status_list[-1]['marlow']['up']"
          - "rhys.msg == 'All nodes are in an UP/NORMAL state'"

    - name: Bring down london2
      shell: "sudo -E -u cassandra bash -c \"{{ ccm_cmd | mandatory }} london2 stop\""
      become_user: cassandra
      args:
        warn: false
        chdir: /home/cassandra
      environment:
        CCM_CONFIG_DIR: "/home/cassandra/config"
        CASSANDRA_HOME: "/home/cassandra"

    - name: Allow one down
      community.cassandra.cassandra_status:
        down: 1
        host: 127.0.0.1
        port: 7100
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: no
      register: rhys

    - name: Assert cluster status 127.0.0.2 is down
      assert:
        that:
          - "rhys.cluster_status['london']['down'] | length == 1"
          - "rhys.cluster_status['london']['up'] | length == 1"
          - "rhys.cluster_status['london']['down'][0] == '127.0.0.2'"
          - "rhys.msg == 'Down nodes are within the tolerated level'"

    - name: Allow none down and test msg
      community.cassandra.cassandra_status:
        host: 127.0.0.1
        port: 7100
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
      register: rhys
      ignore_errors: yes

    - name: Assert cluster status 127.0.0.2 is down
      assert:
        that:
          - "rhys.cluster_status['london']['down'] | length == 1"
          - "rhys.cluster_status['london']['up'] | length == 1"
          - "rhys.cluster_status['london']['down'][0] == '127.0.0.2'"
          - "rhys.msg == 'Too many nodes are in a DOWN state'"
          - "rhys.failed == True"
  always:
    - name: Cleanup any ccm stuff
      shell: "sudo -E -u cassandra bash -c \"{{ ccm_cmd | mandatory }} stop test && ccm remove test > /dev/null\""
      become_user: cassandra
      args:
        warn: false
        chdir: /home/cassandra
      environment:
        CCM_CONFIG_DIR: "/home/cassandra/config"
        CASSANDRA_HOME: "/home/cassandra"
      ignore_errors: yes

# TODO - Add tests with auth
#- include_tasks: ../../setup_cassandra/tasks/cassandra_auth.yml
#  when: cassandra_auth_tests == True
