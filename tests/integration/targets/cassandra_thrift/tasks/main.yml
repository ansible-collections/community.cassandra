# test code for the cassandra_thrift module
# (c) 2019,  Rhys Campbell <rhys.james.campbell@googlemail.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

# ===========================================================
- name: Thrift remove starting form Cassandra 4.0
  meta: end_play
  when: "cassandra_version[0] | int >= 4"

- name: Get Ensure thrift starts off disabled
  ansible.builtin.shell: nodetool -h 127.0.0.1 disablethrift

- name: Get thrift status 1
  ansible.builtin.shell: nodetool -h 127.0.0.1 statusthrift
  register: thrift_status

- name: Assert thrift is not running 1
  assert:
    that: "'not running' == thrift_status.stdout"

- name: Turn on thrift with module (check mode)
  community.cassandra.cassandra_thrift:
    state: "enabled"
    debug: yes
  check_mode: yes

- name: Turn on thrift with module
  community.cassandra.cassandra_thrift:
    state: "enabled"
    debug: yes

- name: Get thrift status 2
  ansible.builtin.shell: nodetool -h 127.0.0.1 statusthrift
  register: thrift_status

- name: Assert thrift is running
  assert:
    that: "'running' == thrift_status.stdout"

- name: Turn off thrift with module (check mode)
  community.cassandra.cassandra_thrift:
    state: "disabled"
    debug: yes
  check_mode: yes

- name: Turn off thrift with module
  community.cassandra.cassandra_thrift:
    state: "disabled"
    debug: yes

- name: Get thrift status 3
  ansible.builtin.shell: nodetool -h 127.0.0.1 statusthrift
  register: thrift_status

- name: Assert thrift is not running 2
  assert:
    that: "'not running' == thrift_status.stdout"

- name: Execute with check_mode = True
  community.cassandra.cassandra_thrift:
    state: "enabled"
    debug: yes
  check_mode: true
  register: thrift_staus

- name: Assert thrift status has changed (check_mode)
  assert:
    that: thrift_status.changed == True

- name: Get thrift status 3
  ansible.builtin.shell: nodetool -h 127.0.0.1 statusthrift
  register: thrift_status

- name: Assert thrift is still not running (after check_mode)
  assert:
    that: "'not running' == thrift_status.stdout"

- include_tasks: ../../setup_cassandra/tasks/cassandra_auth.yml
  when: cassandra_auth_tests == True

- name: Turn on thrift with auth
  community.cassandra.cassandra_thrift:
    state: "enabled"
    username: "{{ cassandra_admin_user }}"
    password: "{{ cassandra_admin_pwd }}"
    debug: yes
  register: thrift_status
  when: cassandra_auth_tests == True

- name: Get thrift status 5
  ansible.builtin.shell: nodetool -u {{ cassandra_admin_user }} -pw {{ cassandra_admin_pwd }} -h 127.0.0.1 statusthrift
  register: thrift_status
  when: cassandra_auth_tests == True

- name: Assert thrift is running
  assert:
    that: "'running' == thrift_status.stdout"
  when: cassandra_auth_tests == True

- name: Turn off incremental thrift using password file
  community.cassandra.cassandra_thrift:
    state: "disabled"
    username: "{{ cassandra_admin_user }}"
    password_file: /etc/cassandra/jmxremote.password
    debug: yes
  register: thrift_status
  when: cassandra_auth_tests == True

- name: Get thrift status 6
  ansible.builtin.shell: nodetool -u {{ cassandra_admin_user }} -pw {{ cassandra_admin_pwd }} -h 127.0.0.1 statusthrift
  register: thrift_status
  when: cassandra_auth_tests == True

- name: Assert thrift is running
  assert:
    that: "'not running' == thrift_status.stdout"
  when: cassandra_auth_tests == True

- name: Test login failure handling
  community.cassandra.cassandra_thrift:
    state: "disabled"
    username: "{{ cassandra_admin_user }}"
    password: XXXXXXXXXXXXXXXXXXXXX
    debug: yes
  register: login_status
  ignore_errors: true
  when: cassandra_auth_tests == True

- name: Assert failed login
  assert:
    that:
      - login_status.failed == True
      - "'Invalid username or password' in login_status.stderr"
  when: cassandra_auth_tests == True

- name: Test incorrect nodetool_path handling
  community.cassandra.cassandra_thrift:
    state: "disabled"
    nodetool_path: "/tmp/"
    debug: yes
  register: nodetool_path_error
  ignore_errors: true
  when: cassandra_auth_tests == True

- name: Assert no such file
  assert:
    that:
      - "'No such file or directory' in nodetool_path_error.msg"
