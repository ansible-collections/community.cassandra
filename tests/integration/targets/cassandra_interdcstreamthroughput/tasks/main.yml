# test code for the cassandra_interdcstreamthroughput module
# (c) 2019,  Rhys Campbell <rhys.james.campbell@googlemail.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

# ===========================================================
- name: Get interdcstreamthroughput
  ansible.builtin.shell: nodetool -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput

- name: Assert starting status of interdcstreamthroughput
  assert:
    that: "'Current inter-datacenter stream throughput: 200 Mb/s' == interdcstreamthroughput.stdout"

- name: Increase interdcstreamthroughput with module
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 500
    debug: true

- name: Get interdcstreamthroughput
  ansible.builtin.shell: nodetool -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput

- name: Assert interdcstreamthroughput is 500MB
  assert:
    that: "'Current inter-datacenter stream throughput: 500 Mb/s' == interdcstreamthroughput.stdout"

- name: Set throughput to 200
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 200
    debug: true

- name: Get interdcstreamthroughput
  ansible.builtin.shell: nodetool -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput

- name: Assert interdcstreamthroughput is 200MB
  assert:
    that: "'Current inter-datacenter stream throughput: 200 Mb/s' == interdcstreamthroughput.stdout"

- name: Test module with check_mode = true
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 128
    debug: true
  check_mode: true
  register: interdcstreamthroughput

- name: Assert interdcstreamthroughput has changed (check_mode)
  assert:
    that: interdcstreamthroughput.changed == True

- name: Get interdcstreamthroughput
  ansible.builtin.shell: nodetool -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput

- name: Assert interdcstreamthroughput is still 200MB
  assert:
    that: "'Current inter-datacenter stream throughput: 200 Mb/s' == interdcstreamthroughput.stdout"

- name: Set interdcstreamthroughput to 250
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 250
    debug: true

- name: Get interdcstreamthroughput
  ansible.builtin.shell: nodetool -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput

- name: Assert interdcstreamthroughput is 250MB
  assert:
    that: "'Current inter-datacenter stream throughput: 250 Mb/s' == interdcstreamthroughput.stdout"

- name: Set interdcstreamthroughput 250 should not change
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 250
    debug: true
  register: module_nochange

- name: Get interdcstreamthroughput
  ansible.builtin.shell: nodetool -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput

- name: Assert interdcstreamthroughput is still 250MB and module reports no change
  assert:
    that:
      - "'Current inter-datacenter stream throughput: 250 Mb/s' == interdcstreamthroughput.stdout"
      - module_nochange.changed == False

- include_tasks: ../../setup_cassandra/tasks/cassandra_auth.yml
  when: cassandra_auth_tests == True

- name: Set interdcstreamthroughput 300MB when auth is enabled
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 300
    username: "{{ cassandra_admin_user }}"
    password: "{{ cassandra_admin_pwd }}"
    debug: true
  register: interdcstreamthroughput
  when: cassandra_auth_tests == True

- name: Get interdcstreamthroughput auth 1
  ansible.builtin.shell: nodetool -u {{ cassandra_admin_user }} -pw {{ cassandra_admin_pwd }} -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput
  when: cassandra_auth_tests == True

- name: Assert interdcstreamthroughput is 300MB
  assert:
    that:
      - "'Current inter-datacenter stream throughput: 300 Mb/s' == interdcstreamthroughput.stdout"
      - interdcstreamthroughput.changed == True

- name: Set back to 200MB using the pw file option
  community.cassandra.cassandra_interdcstreamthroughput:
    value:  200
    username: "{{ cassandra_admin_user }}"
    password_file: /etc/cassandra/jmxremote.password
    debug: true
  register: interdcstreamthroughput
  when: cassandra_auth_tests == True

- name: Get interdcstreamthroughput auth 2
  ansible.builtin.shell: nodetool -u {{ cassandra_admin_user }} -pw {{ cassandra_admin_pwd }} -h 127.0.0.1 getinterdcstreamthroughput
  register: interdcstreamthroughput
  when: cassandra_auth_tests == True

- name: Assert interdcstreamthroughput is again 200MB
  assert:
    that:
      - "'Current inter-datacenter stream throughput: 200 Mb/s' == interdcstreamthroughput.stdout"
      - interdcstreamthroughput.changed == True
  when: cassandra_auth_tests == True

- name: Test login failure handling
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 128
    username: "{{ cassandra_admin_user }}"
    password: XXXXXXXXXXXXXXXXXXXXX
    debug: true
  register: login_status
  ignore_errors: true
  when: cassandra_auth_tests == True

- name: Assert failed login
  assert:
    that:
      - login_status.failed == True
      - "'Invalid username or password' in login_status.stderr"
  when: cassandra_auth_tests == True

- name: Test incorrect nodetool_path handling
  community.cassandra.cassandra_interdcstreamthroughput:
    value: 128
    nodetool_path: /tmp
    debug: true
  register: nodetool_path_error
  ignore_errors: true
  when: cassandra_auth_tests == True

- name: Assert no such file
  assert:
    that:
      - "'No such file or directory' in nodetool_path_error.msg"
