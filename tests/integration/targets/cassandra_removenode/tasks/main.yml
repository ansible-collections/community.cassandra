# test code for the cassandra_removenode module
# (c) 2021,  Rhys Campbell <rhyscampbell@bluewin.ch>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

# ===========================================================

- name: Run module tests for cassandra_removenode
  block:

    # ccm created nodes seem to number the jmx ports 7100, 7200, 7300 usw
    - name: Execute module with dodgy uuid host_id
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "XXXXXXXXXXXXXX"
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes
      ignore_errors: yes
      register: rhys

    - name: Assert decommission successful
      assert:
        that:
          - rhys.failed
          - "rhys.msg == 'host_id is not a valid uuid'"

    - name: Get host_id of node listening on 127.0.0.1
      shell: nodetool status --port 7100 | grep 127.0.0.1 | tr -s ' ' | cut -d ' ' -f7
      register: nodetool

    - name: Execute module against the first ccm node - Should fail
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "{{ nodetool.stdout }}"
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes
      ignore_errors: yes
      register: rhys

    - name: Assert module has failed
      assert:
        that:
          - rhys.failed
          - "rhys.msg == 'removenode command failed'"

    - name: Execute module with fake uuid
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes
      ignore_errors: yes
      register: rhys

    - name: Assert module has performed no action
      assert:
        that:
          - rhys.changed == False
          - "rhys.msg == 'host_id does not exist in the cluster'"

    - name: Get host_id of node listening on 127.0.0.2
      shell: nodetool status --port 7100 | grep 127.0.0.2 | tr -s ' ' | cut -d ' ' -f7
      register: nodetool

    - name: debug 1
      shell: netstat -tulpen | grep 127.0.0.2 | head -n -1 | tr -s ' ' | cut -d ' ' -f9 | cut -d '/' -f1

    - name: debug 2
      shell: netstat -tulpen
        
    - name: Wait for node 2 cassandra to shutdown
      wait_for:
        host: 127.0.0.2
        port: 9042
        state: "drained"

    - name: Remove node 2 - check mode
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "{{ nodetool.stdout }}"
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes
      check_mode: yes
      register: rhys

    - assert:
        that:
          - rhys.changed
          - "rhys.msg == 'removenode command succeeded'"

    - name: Get status
      shell: nodetool status --port 7100 
      register: nodetool_status

    - name: Verifiy that check mode works and the host id is still in the cluster
      assert:
        that:
          - "'127.0.0.2' in nodetool_status.stdout"

    - name: Remove node 2 
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "{{ nodetool.stdout }}"
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes
      check_mode: no
      register: rhys

    - assert:
        that:
          - rhys.changed
          - "rhys.msg == 'removenode command succeeded'"

    - name: Verifiy that 127.0.0.2
      assert:
        that:
          - "'127.0.0.2' not in nodetool.stdout"

    - name: Run module with same host_id again - force completion
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "{{ nodetool.stdout }}"
        force: yes
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes

    - name: Run module with same host_id again - should be absent and result in no change
      community.cassandra.cassandra_removenode:
        host: 127.0.0.1
        port: 7100
        host_id: "{{ nodetool.stdout }}"
        nodetool_path: /home/cassandra/config/repository/{{ cassandra_version }}/bin
        debug: yes

    - assert:
        that:
          - rhys.changed == False
          - "rhys.msg == 'host_id does not exist in the cluster'"
# TODO - Add tests with auth
#- include_tasks: ../../setup_cassandra/tasks/cassandra_auth.yml
#  when: cassandra_auth_tests == True
